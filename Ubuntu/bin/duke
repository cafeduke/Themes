#!/bin/bash

# -------------------------------------------------------------------------------------------------
# Functions
# -------------------------------------------------------------------------------------------------
BASEDIR=$(dirname $(readlink -f ${0}))
BASENAME=$(basename ${0})

function usage {
  echo "
  Usage:
  ${BASENAME}
    install|upgrade|remove <package>
      Perform operation on <package> using apt. Translates to 'sudo -E -y apt <operation> <arg...>'

    list <package...>
      For each <package>, a search is performed among installed packages

    list-regex <package...>
      For each regex specified in <package>, a case-insensitive substring match is performed among installed packages

    search <package>
      Perform a case-insensitive substring match among available packages, looking for given <package>

    os-version
      Print Linux version

    open <dir>
      Spawn a file explorer to view <dir>. Translates to 'gio open <arg...>'
  " | sed -re "s% {2}%%"
  exit 0
}

function dieUsage {
  usage
  exit 1
}

function heading {
  local mesg=${1}
  echo "-------------------------------------------------------------------------------------------------"
  echo "${mesg}"
  echo "-------------------------------------------------------------------------------------------------"
}

# -------------------------------------------------------------------------------------------------
# Parse Arg
# -------------------------------------------------------------------------------------------------
if [[ ${#} -eq 0 || (${#} -eq 1 && ("${1}" == "-h" || "${1}" == "--help")) ]]
then
  usage
fi

op=${1}
shift

# -------------------------------------------------------------------------------------------------
# Main
# -------------------------------------------------------------------------------------------------

case ${op} in

  install|upgrade|remove)

    # If the first argument is a file and if the file exists then
    if [[ ! -z "$1" && -e "${PWD}/${1}" ]]
    then
      set -- "${PWD}/${1}" "${@:2}"
    fi
    cmd="sudo -E apt ${op} -y ${@}"
    heading "Executing: ${cmd}"
    ${cmd}
  ;;

  list)
    if [[ ${#} -lt 1 ]]
    then
      dieUsage "Package(s) to search for (among installed packages) required."
    fi
    heading "Matching packages"
    apt list --installed "${@}" 2> /tmp/duke.err
  ;;

  list-regex)
    if [[ ${#} -lt 1 ]]
    then
      dieUsage "Package(s) regex to search for (among installed packages) required."
    fi
    rm -f /tmp/duke_find.txt
    for currFind in "$@"
    do
      echo "${currFind}" >> /tmp/duke_find.txt
    done
    heading "Matching packages"
    apt list --installed 2> /tmp/duke.err | egrep -i -f /tmp/duke_find.txt
  ;;

  search)
    if [[ ${#} -ne 1 ]]
    then
      dieUsage "Package to search for required."
    fi
    toFind=${@}
    heading "Matching packages"
    apt search ${toFind} 2> /tmp/duke.err
  ;;

  open)
    cmd="gio open ${@}"
    ${cmd}
  ;;

  os-version)
    lsb_release -d | cut -d":" -f2 | trim
  ;;

  *)
    echo "Unknown option ${op}"
    dieUsage
  ;;
esac
